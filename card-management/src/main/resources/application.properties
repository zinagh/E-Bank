
spring.datasource.url=jdbc:mysql://localhost:3306/cardmanagementdb?createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
# server name
spring.application.name=card-management

# server configuration
server.port=0
MIN_PORT=8081
Max_PORT=65000
server.servlet.context-path=/cardmanagement

#eureka configuration
eureka.instance.hostname=localhost
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
eureka.client.registry-fetch-interval-seconds=10
eureka.instance.lease-renewal-interval-in-seconds=10
eureka.instance.lease-expiration-duration-in-seconds=10


#jwt jwk issuer
spring.security.oauth2.resourceserver.jwt.issuer-uri= http://localhost:8181/realms/E-Bank
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs

## JWT conversion
principle-attribute=preferred_username
resourceId=realm_access

# payment en ligne

stripe.secretKey=sk_test_51OgGMAFeBQVPdRDN6QWyJTY69EXiRkgcwlgagWEkFHjhMyUSvrrwBarc19ZmK7d5jpmsjfoOVfEhVyNqY97fLgUu002xko6CCZ
spring.servlet.multipart.enabled=true


# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.


spring.servlet.multipart.max-file-size=200MB
# Max Request Size



spring.servlet.multipart.max-request-size=215MB



